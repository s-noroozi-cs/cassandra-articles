What is Big Data?
	Big Data is a term used for a collection of data sets that are large and complex, which is difficult to store and process using available database management tools or traditional data processing applications. The challenge includes capturing, curating, storing, searching, sharing, transferring, analyzing and visualization of this data.

Big Data Characteristics
	The five characteristics (5V)- that define Big Data are: Volume, Velocity, Variety, Veracity and Value.

1. VOLUME
	Volume refers to the ‘amount of data’, which is growing day by day at a very fast pace. The size of data generated by humans, machines and their interactions on social media itself is massive. Researchers have predicted that 40 Zettabytes (40,000 Exabytes) will be generated by 2020, which is an increase of 300 times from 2005.

2. VELOCITY
	Velocity is defined as the pace at which different sources generate the data every day. This flow of data is massive and continuous. There are 1.03 billion Daily Active Users (Facebook DAU) on Mobile as of now, which is an increase of 22% year-over-year. This shows how fast the number of users are growing on social media and how fast the data is getting generated daily. If you are able to handle the velocity, you will be able to generate insights and take decisions based on real-time data. 

3. VARIETY
	As there are many sources which are contributing to Big Data, the type of data they are generating is different. It can be structured, semi-structured or unstructured. Hence, there is a variety of data which is getting generated every day. Earlier, we used to get the data from excel and databases, now the data are coming in the form of images, audios, videos, sensor data etc. as shown in below image. Hence, this variety of unstructured data creates problems in capturing, storage, mining and analyzing the data.
	
	Types of Big Data
	Big Data could be of three types:

	1. Structured
		The data that can be stored and processed in a fixed format is called as Structured Data. Data stored in a relational database management system (RDBMS) is one example of  ‘structured’ data. It is easy to process structured data as it has a fixed schema. Structured Query Language (SQL) is often used to manage such kind of Data.
	2. Semi-Structured
		Semi-Structured Data is a type of data which does not have a formal structure of a data model, i.e. a table definition in a relational DBMS, but nevertheless it has some organizational properties like tags and other markers to separate semantic elements that makes it easier to analyze. XML files or JSON documents are examples of semi-structured data.
	3. Unstructured
		The data which have unknown form and cannot be stored in RDBMS and cannot be analyzed unless it is transformed into a structured format is called as unstructured data. Text Files and multimedia contents like images, audios, videos are example of unstructured data. The unstructured data is growing quicker than others, experts say that 80 percent of the data in an organization are unstructured. 
	
4. VERACITY
	Veracity refers to the data in doubt or uncertainty of data available due to data inconsistency and incompleteness. In the image below, you can see that few values are missing in the table. Also, a few values are hard to accept, for example – 15000 minimum value in the 3rd row, it is not possible. This inconsistency and incompleteness is Veracity.
	Data available can sometimes get messy and maybe difficult to trust. With many forms of big data, quality and accuracy are difficult to control like Twitter posts with hashtags, abbreviations, typos and colloquial speech. The volume is often the reason behind for the lack of quality and accuracy in the data. 

	Due to uncertainty of data, 1 in 3 business leaders don’t trust the information they use to make decisions.
	It was found in a survey that 27% of respondents were unsure of how much of their data was inaccurate.
	Poor data quality costs the US economy around $3.1 trillion a year.
	
5. VALUE
	After discussing Volume, Velocity, Variety and Veracity, there is another V that should be taken into account when looking at Big Data i.e. Value. It is all well and good to have access to big data but unless we can turn it into value it is useless. By turning it into value I mean, Is it adding to the benefits of the organizations who are analyzing big data? Is the organization working on Big Data achieving high ROI (Return On Investment)? Unless, it adds to their profits by working on Big Data, it is useless.
	
Examples of Big Data
Daily we upload millions of bytes of data. 90 % of the world’s data has been created in last two years.

	* Walmart handles more than 1 million customer transactions every hour.
	* Facebook stores, accesses, and analyzes 30+ Petabytes of user generated data.
	* 230+ millions of tweets are created every day.
	* More than 5 billion people are calling, texting, tweeting and browsing on mobile phones worldwide.
	* YouTube users upload 48 hours of new video every minute of the day.
	* Amazon handles 15 million customer click stream user data per day to recommend products.
	* 294 billion emails are sent every day. Services analyses this data to find the spams.
	* Modern cars have close to 100 sensors which monitors fuel level, tire pressure etc. , each vehicle generates a lot of sensor data.
	
Applications of Big Data
	* Smarter Healthcare: Making use of the petabytes of patient’s data, the organization can extract meaningful information and then build applications that can predict the patient’s deteriorating condition in advance.

	* Telecom: Telecom sectors collects information, analyzes it and provide solutions to different problems. By using Big Data applications, telecom companies have been able to significantly reduce data packet loss, which occurs when networks are overloaded, and thus, providing a seamless connection to their customers.

	* Retail: Retail has some of the tightest margins, and is one of the greatest beneficiaries of big data. The beauty of using big data in retail is to understand consumer behavior. Amazon’s recommendation engine provides suggestion based on the browsing history of the consumer.

	* Traffic control: Traffic congestion is a major challenge for many cities globally. Effective use of data and sensors will be key to managing traffic better as cities become increasingly densely populated.

	* Manufacturing: Analyzing big data in the manufacturing industry can reduce component defects, improve product quality, increase efficiency, and save time and money.

	* Search Quality: Every time we are extracting information from google, we are simultaneously generating data for it. Google stores this data and uses it to improve its search quality.

Features of RDBMS Systems:
	* All data stored in the tables are provided by an RDBMS
	* Ensures that all data stored are in the form of rows and columns
	* Facilitates primary key, which helps in unique identification of the rows
	* Index creation for retrieving data at a higher speed
	* Facilitates a common column to be shared amid two or more tables
	* Multi-user accessibility is facilitated to be controlled by individual users
	* A virtual table creation is enabled to store sensitive data and simplify queries
	
Limitations for SQL database
	* Scalability: Users have to scale relational database on powerful servers that are expensive and difficult to handle. To scale relational database it has 	to be distributed on to multiple servers. Handling tables across different servers is difficult .

	* Complexity: In SQL server’s data has to fit into tables anyhow. If your data doesn’t fit into tables, then you need to design your database structure that will be complex and again difficult to handle.
	
NoSQL
	NoSQL commonly referred to as “Not Only SQL”. With NoSQL, unstructured ,schema less data can be stored in multiple collections and nodes and it does not require fixed table sachems, it supports limited join queries , and we scale it horizontally.
	
Benefits of NoSQL
	highly and easily scalable
		Relational database or RDBMS databases are vertically Scalable When load increase on RDBMS database then we scale database by increasing server hardware power ,need to by expensive and bigger servers and NoSQL databases are designed to expand horizontally and in Horizontal scaling means that you scale by adding more machines into your pool of resources.
	Maintaining NoSQL Servers is Less Expensive
		Maintaining high-end RDBMS systems is expensive and need trained manpower for database management but NoSQL databases require less management. it support many Features like automatic repair, easier data distribution, and simpler data models make administration and tuning requirements lesser in NoSQL.
	Lesser Server Cost and open-Source
		NoSQL databases are cheap and open source. NoSql database implementation is easy and typically uses cheap servers to manage the exploding data and transaction while RDBMS databases are expensive and it uses big servers and storage systems. So the storing and processing data cost per gigabyte in the case of NoSQL can be many times lesser than the cost of RDBMS.
	No Schema or Fixed Data model
		NoSQL database is schema less so Data can be inserted in a NoSQL database without any predefined schema. So the format or data model can be changed any time, without application disruption.and change management is a big headache in SQL.
	Support Integrated Caching
		NoSQL database support caching in system memory so it increase data output performance and SQL database where this has to be done using separate infrastructure.

Limitations & disadvantage of NoSQL
	1. Lack of standardizing. NoSQL database is Open Source and Open Source at its greatest strength but at the same time its greatest weakness because there are not many defined standards for NoSQL databases, so no two NoSQL databases are equal
	2. No Stored Procedures in mongodb (NoSql database).
	3. GUI mode tools to access the database is not flexibly available in market. They usually have not-really-useful management tools or console access.
	4. Too difficult for finding nosql experts because it is latest technology and NoSQL developer are in learning mode
	5. Not all NoSQL databases contemplate the atomicity of instructions and the integrity of the data. They withstand what’s know as eventual consistence.
	

NoSQL vs SQL: When should we use which type of database?
	1. When the data must be consisten without leaving room for error when using a relational database. SQL.
	2. When our budget won’t allow large devices and must be put into lower performance devices. NoSQL.
	3. When the datastructures we manage are variable. NoSQL.
	4. For analyzing large quantities of data in read mode only. NoSQL.
	5. Event capture and processing. NoSQL
	6. Online stores with complex intelligence engines. NoSQL
